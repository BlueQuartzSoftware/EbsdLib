/* ============================================================================
* Copyright (c) 2009-2015 BlueQuartz Software, LLC
*
* Redistribution and use in source and binary forms, with or without modification,
* are permitted provided that the following conditions are met:
*
* Redistributions of source code must retain the above copyright notice, this
* list of conditions and the following disclaimer.
*
* Redistributions in binary form must reproduce the above copyright notice, this
* list of conditions and the following disclaimer in the documentation and/or
* other materials provided with the distribution.
*
* Neither the name of BlueQuartz Software, the US Air Force, nor the names of its 
* contributors may be used to endorse or promote products derived from this software 
* without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
* DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
* FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
* CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
* USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*
* The code contained herein was partially funded by the followig contracts:
*    United States Air Force Prime Contract FA8650-07-D-5800
*    United States Air Force Prime Contract FA8650-10-D-5210
*    United States Prime Contract Navy N00173-07-C-2068
*
* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */

#ifndef _EbsdTestFileLocation_h_
#define _EbsdTestFileLocation_h_

/***********
 * This file is auto generated from the file at DREAM3D/Source/EbsdLib/Test/EbsdTestFileLocations.h.in
 * If there is an issue with this file edit the original file. This file is autogenerated at
 * CMake time.
 */

#include <QtCore/QString>

#define REMOVE_TEST_FILES 1


namespace UnitTest
{

  const QString DataDir("@EbsdLibProj_SOURCE_DIR@/Data/");
  const QString TestTempDir("@TEST_TEMP_DIR@");
  const QString DREAM3DProjDir("@EbsdLibProj_SOURCE_DIR@");

  namespace AngImportTest {
    const QString FileDir("@EbsdLibProj_SOURCE_DIR@/Data/EbsdTestFiles/");
    const QString TestFile1("@EbsdLibProj_SOURCE_DIR@/Data/EbsdTestFiles/Test_1.ang");
    const QString TestFile2("@EbsdLibProj_SOURCE_DIR@/Data/EbsdTestFiles/Test_2.ang");
    const QString TestFile3("@EbsdLibProj_SOURCE_DIR@/Data/EbsdTestFiles/Test_3.ang");
    const QString H5EbsdOutputFile("@EbsdLibTest_BINARY_DIR@/FromAng.h5ebsd");
    const QString MissingHeader1("@EbsdLibProj_SOURCE_DIR@/Data/EbsdTestFiles/MissingHeader_1.ang");
    const QString GridMissing("@EbsdLibProj_SOURCE_DIR@/Data/EbsdTestFiles/GridMissing.ang");
    const QString MissingHeader3("@EbsdLibProj_SOURCE_DIR@/Data/EbsdTestFiles/MissingHeader_3.ang");
    const QString HexHeader("@EbsdLibProj_SOURCE_DIR@/Data/EbsdTestFiles/HexHeader.ang");
    const QString ShortFile("@EbsdLibProj_SOURCE_DIR@/Data/EbsdTestFiles/ShortFile.ang");
    const QString EdaxOIMH5File("@EbsdLibProj_SOURCE_DIR@/Data/EbsdTestFiles/EdaxOIMData.h5");
  }

  namespace CtfReaderTest
  {
    const QString FileDir("@EbsdLibProj_SOURCE_DIR@/Data/EbsdTestFiles/");
    const QString EuropeanInputFile1("@EbsdLibProj_SOURCE_DIR@/Data/EbsdTestFiles/Test_European_1.ctf");
    const QString USInputFile1("@EbsdLibProj_SOURCE_DIR@/Data/EbsdTestFiles/Test_US_1.ctf");
    const QString EuropeanInputFile2("@EbsdLibProj_SOURCE_DIR@/Data/EbsdTestFiles/Test_European_2.ctf");
    const QString USInputFile2("@EbsdLibProj_SOURCE_DIR@/Data/EbsdTestFiles/Test_US_2.ctf");
    const QString Corrupted_XCells("@EbsdLibProj_SOURCE_DIR@/Data/EbsdTestFiles/Corrupted_XCells.ctf");
    const QString ShortFile("@EbsdLibProj_SOURCE_DIR@/Data/EbsdTestFiles/ShortFile.ctf");
    const QString ZeroXYCells("@EbsdLibProj_SOURCE_DIR@/Data/EbsdTestFiles/ZeroXYCells.ctf");

    const QString H5EbsdOutputFile("@EbsdLibTest_BINARY_DIR@/FromCtf.h5ebsd");
  }

  namespace HedmReaderTest
  {
    const QString FileDir("@EbsdLibProj_SOURCE_DIR@/Data/HEDMTestFiles");
    const QString ConfigFile("@EbsdLibProj_SOURCE_DIR@/Data/HEDMTestFiles/HedmTest.config");
    const QString DatFile("@EbsdLibProj_SOURCE_DIR@/Data/HEDMTestFiles/HedmTest.dat");
    const QString MicFile("@EbsdLibProj_SOURCE_DIR@/Data/HEDMTestFiles/HedmTest.mic");
  }

  namespace H5EspritReaderTest
  {
     const QString InputFile("@EbsdLibProj_SOURCE_DIR@/Data/EbsdTestFiles/H5EspritReaderTest.h5");
     const QString OutputFile("@EbsdLibTest_BINARY_DIR@/H5Esprit_Output_File.h5");
  }

  namespace IPFLegendTest
  {
    const QString CubicLowFile("@TEST_TEMP_DIR@/Cubic_Low_m3(Tetrahedral).png");
    const QString CubicHighFile("@TEST_TEMP_DIR@/Cubic_High_m3m.png");
    const QString HexagonalLowFile("@TEST_TEMP_DIR@/Hexagonal-Low_6_m.png");
    const QString HexagonalHighFile("@TEST_TEMP_DIR@/Hexagonal-High_6_mmm.png");
    const QString MonoclinicFile("@TEST_TEMP_DIR@/Monoclinic-2_m.png");
    const QString OrthorhombicFile("@TEST_TEMP_DIR@/Orthorhombic_mmm.png");
    const QString TetragonalLowFile("@TEST_TEMP_DIR@/Tetragonal_Low_4m.png");
    const QString TetragonalHighFile("@TEST_TEMP_DIR@/Tetragonal_High_4mmm.png");
    const QString TriclinicFile("@TEST_TEMP_DIR@/Triclinic-1.png");
    const QString TrignonalLowFile("@TEST_TEMP_DIR@/Trigonal-3.png");
    const QString TrignonalHighFile("@TEST_TEMP_DIR@/Trigonal_high-3m.png");
  }


}



#endif
